$(document).ready(function () {
  const countryFlags = {
    // Arab countries
    SA: "üá∏üá¶", // Saudi Arabia
    AE: "üá¶üá™", // United Arab Emirates
    KW: "üá∞üáº", // Kuwait
    QA: "üá∂üá¶", // Qatar
    OM: "üá¥üá≤", // Oman
    BH: "üáßüá≠", // Bahrain
    IQ: "üáÆüá∂", // Iraq
    SY: "üá∏üáæ", // Syria
    LB: "üá±üáß", // Lebanon
    JO: "üáØüá¥", // Jordan
    PS: "üáµüá∏", // Palestine
    EG: "üá™üá¨", // Egypt
    MA: "üá≤üá¶", // Morocco
    DZ: "üá©üáø", // Algeria
    TN: "üáπüá≥", // Tunisia
    LY: "üá±üáæ", // Libya
    SD: "üá∏üá©", // Sudan
    MR: "üá≤üá∑", // Mauritania
    YE: "üáæüá™", // Yemen
    SO: "üá∏üá¥", // Somalia
    DJ: "üá©üáØ", // Djibouti
    KM: "üá∞üá≤", // Comoros

    // Global countries
    US: "üá∫üá∏", // United States
    CA: "üá®üá¶", // Canada
    GB: "üá¨üáß", // United Kingdom
    DE: "üá©üá™", // Germany
    FR: "üá´üá∑", // France
    JP: "üáØüáµ", // Japan
    IN: "üáÆüá≥", // India
    CN: "üá®üá≥", // China
    BR: "üáßüá∑", // Brazil
    AU: "üá¶üá∫", // Australia
    IT: "üáÆüáπ", // Italy
    ES: "üá™üá∏", // Spain
    MX: "üá≤üáΩ", // Mexico
    RU: "üá∑üá∫", // Russia
    KR: "üá∞üá∑", // South Korea
    AR: "üá¶üá∑", // Argentina
    ZA: "üáøüá¶", // South Africa
    NG: "üá≥üá¨", // Nigeria
    TR: "üáπüá∑", // Turkey
    ID: "üáÆüá©", // Indonesia
    PK: "üáµüá∞", // Pakistan
    MY: "üá≤üáæ", // Malaysia
    TH: "üáπüá≠", // Thailand
    VN: "üáªüá≥", // Vietnam
    PH: "üáµüá≠", // Philippines
    BD: "üáßüá©", // Bangladesh
    PL: "üáµüá±", // Poland
    NL: "üá≥üá±", // Netherlands
    SE: "üá∏üá™", // Sweden
    NO: "üá≥üá¥", // Norway
    DK: "üá©üá∞", // Denmark
    FI: "üá´üáÆ", // Finland
    CH: "üá®üá≠", // Switzerland
    AT: "üá¶üáπ", // Austria
    BE: "üáßüá™", // Belgium
    IE: "üáÆüá™", // Ireland
    PT: "üáµüáπ", // Portugal
    GR: "üá¨üá∑", // Greece
    IL: "üáÆüá±", // Israel
    AF: "üá¶üá´", // Afghanistan
    LK: "üá±üá∞", // Sri Lanka
    NP: "üá≥üáµ", // Nepal
    MM: "üá≤üá≤", // Myanmar
    KH: "üá∞üá≠", // Cambodia
    SG: "üá∏üá¨", // Singapore
    NZ: "üá≥üáø", // New Zealand
    CL: "üá®üá±", // Chile
    PE: "üáµüá™", // Peru
    CO: "üá®üá¥", // Colombia
    VE: "üáªüá™", // Venezuela
    CU: "üá®üá∫", // Cuba
    DO: "üá©üá¥", // Dominican Republic
    JM: "üáØüá≤", // Jamaica
    HT: "üá≠üáπ", // Haiti
    CR: "üá®üá∑", // Costa Rica
    PA: "üáµüá¶", // Panama
    GT: "üá¨üáπ", // Guatemala
    HN: "üá≠üá≥", // Honduras
    SV: "üá∏üáª", // El Salvador
    BZ: "üáßüáø", // Belize
    NI: "üá≥üáÆ", // Nicaragua
    PY: "üáµüáæ", // Paraguay
    UY: "üá∫üáæ", // Uruguay
    BO: "üáßüá¥", // Bolivia
    EC: "üá™üá®", // Ecuador
    MG: "üá≤üá¨", // Madagascar
    KE: "üá∞üá™", // Kenya
    TZ: "üáπüáø", // Tanzania
    UG: "üá∫üá¨", // Uganda
    ET: "üá™üáπ", // Ethiopia
    GH: "üá¨üá≠", // Ghana
    CI: "üá®üáÆ", // Ivory Coast
    SN: "üá∏üá≥", // Senegal
    ZW: "üáøüáº", // Zimbabwe
    ZM: "üáøüá≤", // Zambia
    MW: "üá≤üáº", // Malawi
    MZ: "üá≤üáø", // Mozambique
    BW: "üáßüáº", // Botswana
    NA: "üá≥üá¶", // Namibia
    LS: "üá±üá∏", // Lesotho
    SZ: "üá∏üáø", // Eswatini
    CM: "üá®üá≤", // Cameroon
    CG: "üá®üá¨", // Republic of the Congo
    CD: "üá®üá©", // DR Congo
    AO: "üá¶üá¥", // Angola
    GA: "üá¨üá¶", // Gabon
    GQ: "üá¨üá∂", // Equatorial Guinea

    // Already included countries and territories without specific emoji flag
    AD: "üè≥Ô∏è", // Andorra
    AG: "üè≥Ô∏è", // Antigua and Barbuda
    BB: "üè≥Ô∏è", // Barbados
    BS: "üè≥Ô∏è", // Bahamas
    BT: "üè≥Ô∏è", // Bhutan
    CV: "üè≥Ô∏è", // Cape Verde
    DM: "üè≥Ô∏è", // Dominica
    FJ: "üè≥Ô∏è", // Fiji
    GD: "üè≥Ô∏è", // Grenada
    GY: "üè≥Ô∏è", // Guyana
    KI: "üè≥Ô∏è", // Kiribati
    KN: "üè≥Ô∏è", // Saint Kitts and Nevis
    LC: "üè≥Ô∏è", // Saint Lucia
    MV: "üè≥Ô∏è", // Maldives
    MH: "üè≥Ô∏è", // Marshall Islands
    NR: "üè≥Ô∏è", // Nauru
    PW: "üè≥Ô∏è", // Palau
    SB: "üè≥Ô∏è", // Solomon Islands
    TO: "üè≥Ô∏è", // Tonga
    TV: "üè≥Ô∏è", // Tuvalu
    VU: "üè≥Ô∏è", // Vanuatu
    WS: "üè≥Ô∏è", // Samoa

    // Additional countries and territories
    AI: "üè≥Ô∏è", // Anguilla
    AW: "üè≥Ô∏è", // Aruba
    BM: "üè≥Ô∏è", // Bermuda
    BV: "üè≥Ô∏è", // Bouvet Island
    CK: "üè≥Ô∏è", // Cook Islands
    CX: "üè≥Ô∏è", // Christmas Island
    CC: "üè≥Ô∏è", // Cocos (Keeling) Islands
    CW: "üè≥Ô∏è", // Cura√ßao
    FK: "üè≥Ô∏è", // Falkland Islands
    FO: "üè≥Ô∏è", // Faroe Islands
    GF: "üè≥Ô∏è", // French Guiana
    PF: "üè≥Ô∏è", // French Polynesia
    TF: "üè≥Ô∏è", // French Southern Territories
    GI: "üè≥Ô∏è", // Gibraltar
    GL: "üè≥Ô∏è", // Greenland
    GP: "üè≥Ô∏è", // Guadeloupe
    GU: "üè≥Ô∏è", // Guam
    GG: "üè≥Ô∏è", // Guernsey
    HM: "üè≥Ô∏è", // Heard Island and McDonald Islands
    IM: "üè≥Ô∏è", // Isle of Man
    JE: "üè≥Ô∏è", // Jersey
    KP: "üè≥Ô∏è", // North Korea
    KY: "üè≥Ô∏è", // Cayman Islands
    LI: "üè≥Ô∏è", // Liechtenstein
    MO: "üè≥Ô∏è", // Macao
    MP: "üè≥Ô∏è", // Northern Mariana Islands
    MS: "üè≥Ô∏è", // Montserrat
    NC: "üè≥Ô∏è", // New Caledonia
    NF: "üè≥Ô∏è", // Norfolk Island
    PN: "üè≥Ô∏è", // Pitcairn Islands
    PM: "üè≥Ô∏è", // Saint Pierre and Miquelon
    BL: "üè≥Ô∏è", // Saint Barthelemy
    SH: "üè≥Ô∏è", // Saint Helena
    MF: "üè≥Ô∏è", // Saint Martin (French)
    SX: "üè≥Ô∏è", // Sint Maarten (Dutch)
    SM: "üè≥Ô∏è", // San Marino
    ST: "üè≥Ô∏è", // S√£o Tom√© and Pr√≠ncipe
    GS: "üè≥Ô∏è", // South Georgia and South Sandwich Islands
    SJ: "üè≥Ô∏è", // Svalbard and Jan Mayen
    TC: "üè≥Ô∏è", // Turks and Caicos Islands
    UM: "üè≥Ô∏è", // United States Minor Outlying Islands
    VC: "üè≥Ô∏è", // Saint Vincent and the Grenadines
    WF: "üè≥Ô∏è", // Wallis and Futuna
    YT: "üè≥Ô∏è", // Mayotte
    AX: "üè≥Ô∏è", // √Öland Islands

    // Regions and disputed territories (without emoji flags)
    XK: "üè≥Ô∏è", // Kosovo
    AS: "üè≥Ô∏è", // American Samoa
    IO: "üè≥Ô∏è", // British Indian Ocean Territory
    EH: "üè≥Ô∏è", // Western Sahara
    PR: "üè≥Ô∏è", // Puerto Rico
    VA: "üè≥Ô∏è", // Vatican City
    PS: "üè≥Ô∏è", // Palestine (if not using a specific emoji)
    HK: "üè≥Ô∏è", // Hong Kong
    TW: "üè≥Ô∏è", // Taiwan
    AQ: "üè≥Ô∏è", // Antarctica
    RE: "üè≥Ô∏è", // R√©union
    MQ: "üè≥Ô∏è", // Martinique
    CV: "üè≥Ô∏è", // Cape Verde
  };

  function initializeDataTable() {
    let countryCounts = {}; // To store the country counts

    $("#visitorTable").DataTable({
      pageLength: 10,
      lengthMenu: [
        [10, 20, 50, 100],
        [10, 20, 50, 100],
      ],
      scrollX: true,
      columns: [
        { data: "id", title: "ID", visible: true },
        { data: "ip", title: "Public IP", visible: true },
        { data: "os", title: "Operating System", visible: true },
        { data: "timezone", title: "Timezone", visible: true },
        { data: "browser", title: "Browser", visible: true },
        { data: "resolution", title: "Resolution", visible: true },
        { data: "language", title: "Language", visible: true },
        { data: "cpuCores", title: "CPU Cores", visible: true },
        { data: "onlineStatus", title: "Online Status", visible: true },
        { data: "connectionType", title: "Connection Type", visible: true },
        { data: "referrer", title: "Referrer", visible: true },
        { data: "fullPath", title: "Full Path", visible: true },
        { data: "country", title: "Country", visible: true },
        { data: "region", title: "Region", visible: true },
        { data: "city", title: "City", visible: true },
        { data: "loc", title: "Location", visible: true }, // For latitude/longitude
        { data: "org", title: "Organization", visible: true }, // Organization/ISP
        { data: "timestamp", title: "Timestamp", visible: true },
      ],
      ajax: {
        url: "visitorHandler.php",
        dataSrc: function (json) {
          countryCounts = {}; // Reset country counts

          // Loop through the data and count occurrences of each country
          json.forEach(function (visitor) {
            if (visitor.country in countryFlags) {
              countryCounts[visitor.country] =
                (countryCounts[visitor.country] || 0) + 1;
            }
          });

          // Sort and display the countries based on the counts
          displayCountryCounts(countryCounts);

          return json;
        },
      },
    });
  }

  // Function to display country counts inside the #countryCounts div with sorting
  function displayCountryCounts(countryCounts) {
    const countryContainer = document.getElementById("countryCounts"); // Get the container element
    countryContainer.innerHTML = ""; // Clear previous content

    // Convert the countryCounts object into an array and sort by the count in descending order
    const sortedCountries = Object.keys(countryCounts).sort(
      (a, b) => countryCounts[b] - countryCounts[a]
    );

    let count = 0;
    let countryRowDiv = document.createElement("div"); // Create a new div for country rows
    countryRowDiv.className = "country-columns"; // Add the necessary class for styling

    sortedCountries.forEach(function (countryCode) {
      if (countryCounts[countryCode] > 0) {
        // Create the box for each country
        const countryBox = document.createElement("div");
        countryBox.className = "country-box"; // Add the class for styling

        // Create the flag element
        const flagSpan = document.createElement("span");
        flagSpan.className = "country-flag";
        flagSpan.textContent = countryFlags[countryCode] || "üè≥Ô∏è";

        // Create the count element
        const countSpan = document.createElement("span");
        countSpan.className = "country-count";
        countSpan.textContent = countryCounts[countryCode];

        // Append the flag and count to the countryBox
        countryBox.appendChild(flagSpan);
        countryBox.appendChild(countSpan);

        // Append the countryBox to the row div
        countryRowDiv.appendChild(countryBox);

        count++;

        // After every 6 countries, append the row to the container and create a new row
        if (count % 6 === 0) {
          countryContainer.appendChild(countryRowDiv); // Append the row div to the container
          countryRowDiv = document.createElement("div"); // Create a new row div for the next set
          countryRowDiv.className = "country-columns";
        }
      }
    });

    // Append the last row if there are remaining items
    if (count % 6 !== 0) {
      countryContainer.appendChild(countryRowDiv);
    }
  }

  // Initialize the DataTable and country count section
  if (!$.fn.DataTable.isDataTable("#visitorTable")) {
    initializeDataTable();
  }



 
  // Ensure the #countryCounts is placed correctly in the container
$(".container").append('<div id="countryCounts"></div>');

});
